{
  "openapi": "3.1.0",
  "info": {
    "title": "JSC Academy - Node.js backend final project",
    "description": "Api documentation",
    "contact": {
      "email": "dameladata17@gmail.com"
    }
  },
  "externalDocs": {
    "description": "Api deploy",
    "url": "https://c21-43-t-node-react-production.up.railway.app/"
  },
  "servers": [
    {
      "url": "https://c21-43-t-node-react-production-227f.up.railway.app/"
    }
  ],
  "tags": [
    {
      "name": "JSC Academy",
      "description": "Online academy"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "class",
      "description": "Class CRUD"
    },
    {
      "name": "auth",
      "description": "Auth operations"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": ["user"],
        "summary": "Returns all users",
        "description": "",
        "operationId": "getAll",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["user"],
        "summary": "Create new user",
        "description": "",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "Register a new user",
        "description": "Creates a new user account with the provided credentials.",
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },

    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Login to the system",
        "description": "Authenticates the user and provides a token upon successful login.",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "theUser"
                  },
                  "password": {
                    "type": "string",
                    "example": "12345"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully, returns token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["auth"],
        "summary": "Logout the user",
        "description": "Logs the user out by invalidating the current access token. Requires a valid JWT.",
        "operationId": "logoutUser",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out"
          },
          "400": {
            "description": "Token required"
          },
          "401": {
            "description": "Unauthorized: Invalid token"
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "tags": ["auth"],
        "summary": "Refresh the authentication token",
        "description": "Generates a new access token using a valid refresh token.",
        "operationId": "refreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "valid-refresh-token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token issued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokens"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Invalid or expired refresh token"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "AuthTokens": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "JWT access token",
            "example": "jwt.access.token"
          },
          "refreshToken": {
            "type": "string",
            "description": "JWT refresh token",
            "example": "jwt.refresh.token"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A message about the login process.",
            "example": "User logged in successfully."
          },
          "tokens": {
            "$ref": "#/components/schemas/AuthTokens"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "phone": {
            "type": "string",
            "example": "12345"
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "format": "int32",
            "example": 1
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    }
  }
}
